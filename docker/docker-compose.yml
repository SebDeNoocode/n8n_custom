version: "3.9"
services:
  db:
    image: postgres:16
    container_name: n8n-DB
    hostname: n8n-db
    mem_limit: 512m
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - landb
    user: "999:999"
    volumes:
      - ${DATA_DIR}/n8n/db:/var/lib/postgresql/data:rw
    environment:
      TZ: ${TIMEZONE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    hostname: n8n
    mem_limit: 1g
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    networks:
      - landb
    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - ${DATA_DIR}/n8n/data:/home/node/.n8n:rw
      - ${DATA_DIR}/n8n/files:/files:rw
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      NODE_ENV: production
      WEBHOOK_URL: ${WEBHOOK_URL}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL}
      GENERIC_TIMEZONE: ${TIMEZONE}
      TZ: ${TIMEZONE}
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_HOST: n8n-db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: true
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
        
networks:
  landb: